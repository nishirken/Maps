exports[`Marker name field Rendered 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div
    x={100}
    y={99}>
    <styled.h3>
        Please enter a name for your marker
    </styled.h3>
    <styled.input
        innerRef={[Function]}
        onChange={[Function]}
        onKeyDown={[Function]}
        type="text" />
</styled.div>,
  "nodes": Array [
    <styled.div
      x={100}
      y={99}>
      <styled.h3>
            Please enter a name for your marker
      </styled.h3>
      <styled.input
            innerRef={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            type="text" />
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 1,
      "_context": Object {},
      "_currentElement": <MarkerNameField
        store={
                Object {
                        "dispatch": [Function],
                        "getState": [Function],
                        "replaceReducer": [Function],
                        "subscribe": [Function],
                        Symbol(observable): [Function],
                      }
        }
        x={100}
        y={99} />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": MarkerNameField {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "store": Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          },
          "x": 100,
          "y": 99,
        },
        "refs": Object {},
        "state": Object {
          "inputValue": "",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div
          x={100}
          y={99}>
          <styled.h3>
                    Please enter a name for your marker
          </styled.h3>
          <styled.input
                    innerRef={[Function]}
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text" />
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div
          x={100}
          y={99}>
          <styled.h3>
                    Please enter a name for your marker
          </styled.h3>
          <styled.input
                    innerRef={[Function]}
                    onChange={[Function]}
                    onKeyDown={[Function]}
                    type="text" />
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <MarkerNameField
    store={
        Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
    }
    x={100}
    y={99} />,
}
`;
